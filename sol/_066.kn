func main()
	var n: int :: cui@inputInt()
	var l: []int :: #[n]int
	var r: []int :: #[n]int
	for i(0, n - 1)
		do l[i] :: cui@inputInt()
		do r[i] :: cui@inputInt()
	end for
	
	var ans: float :: 0.00
	for i(0, n - 2)
		for j(i + 1, n - 1)
			do ans :+ f(l[i], r[i], l[j], r[j])
		end for
	end for
	do cui@print("\{ans}\n")
	
	func f(l1: int, r1: int, l2: int, r2: int): float
		if(r2 < l1)
			ret 1.0
		end if
		if(r1 < l2)
			ret 0.0
		end if
		
		var total: int :: (r1 - l1 + 1) * (r2 - l2 + 1)
		var num: int :: 0
		do num :+ (r1 - l1 + 1) * [l1 - l2, 0].max()
		do num :+ [r1 - r2, 0].max() * (r2 - l2 + 1)
		do num :- [r1 - r2, 0].max() * [l1 - l2, 0].max()
		var n: int :: [r1, r2].min() - [l1, l2].max() + 1
		do num :+ (n * n - n) / 2
		ret num $ float / total $ float
	end func
end func
