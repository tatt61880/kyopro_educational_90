func main()
	var n: []char :: cui@inputStr()
	var k: int :: cui@inputInt()
	var x: int :: 0
	for i(0, ^n - 1)
		do x :* 8
		do x :+ n[i] $ int - '0' $ int
	end for
	
	for(1, k)
		do x :: f(x)
	end for
	
	var ans: []char :: #[0]char
	while(x <> 0, skip)
		do ans :~ ['0'.offset(x % 8)]
		do x :/ 8
	end while
	do ans.reverse()
	do cui@print("\{ans}\n")
	
	func f(x: int): int
		var res: int :: 0
		var cnt: int :: 0
		while(x <> 0)
			switch d(x % 9)
			case 8
				do res :+ 5 * 8 ^ cnt
			default
				do res :+ d * 8 ^ cnt
			end switch
			do cnt :+ 1
			do x :/ 9
		end while
		ret res
	end func
end func
