func main()
	var n: int :: cui@inputInt()
	var k: int :: cui@inputInt()
	var a: []int :: #[n]int
	for i(0, n - 1)
		do a[i] :: cui@inputInt()
	end for
	
	var map: dict<int, int> :: #dict<int, int>
	var l: int :: 0
	var r: int :: 0
	var ans: int :: 0
	while(l <> n)
		if(r = n | ^map > k)
			var key: int :: a[l]
			var val: int :: map.get(key, &) - 1
			if(val = 0)
				do map.del(key)
			else
				do map.add(key, val)
			end if
			do l :+ 1
		else
			var key: int :: a[r]
			var val: int :: map.get(key, &) + 1
			do map.add(key, val)
			do r :+ 1
		end if
		if(^map <= k)
			do ans :: [ans, r - l].max()
		end if
	end while
	
	do cui@print("\{ans}\n")
end func
